from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('io_storages', '0014_init_statuses'),
    ]

    operations = [
        migrations.CreateModel(
            name='PachydermMixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pach_project',
                 models.TextField(blank=True, help_text='Project', null=True, verbose_name='project')),
                ('pach_repo',
                 models.TextField(blank=True, help_text='Repository', null=True, verbose_name='repository')),
                ('pach_branch',
                 models.TextField(blank=True, help_text='Branch', null=True, verbose_name='repository')),
                ('pach_commit',
                 models.TextField(blank=True, help_text='Commit', null=True, verbose_name='commit')),
                ('pachd_address',
                 models.TextField(blank=True, help_text='Pachyderm address', null=True, verbose_name='pachd_address')),
                ('pach_authn_token',
                 models.TextField(blank=True, help_text='Pachyderm Authn Token', null=True,
                                  verbose_name='pachd_address')),
                ('regex_filter', models.TextField(blank=True, help_text='Regex for filtering objects', null=True,
                                                  verbose_name='regex_filter')),
                ('use_blob_urls',
                 models.BooleanField(default=False, help_text='Interpret objects as BLOBs and generate URLs',
                                     verbose_name='use_blob_urls')),
            ],
        ),
        migrations.CreateModel(
            name='PachydermExportStorage',
            fields=[
                ('pachydermmixin_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='io_storages.pachydermmixin')),
                ('created_at',
                 models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last sync finished time', null=True,
                                                   verbose_name='last sync')),
                ('last_sync_count',
                 models.PositiveIntegerField(blank=True, help_text='Count of tasks synced last time', null=True,
                                             verbose_name='last sync count')),
                ('title',
                 models.CharField(help_text='Pachyderm storage title', max_length=256, null=True,
                                  verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Pachyderm storage description', null=True,
                                                 verbose_name='description')),
                ('project', models.ForeignKey(help_text='A unique integer value identifying this project.',
                                              on_delete=django.db.models.deletion.CASCADE,
                                              related_name='io_storages_pachydermexportstorages',
                                              to='projects.project')),
                ('can_delete_objects', models.BooleanField(blank=True, help_text='Deletion from storage enabled',
                                                           null=True, verbose_name='can_delete_objects')),
                ('last_sync_job', models.CharField(blank=True, help_text='Last sync job ID', max_length=256, null=True,
                                                   verbose_name='last_sync_job')),
                ('meta', models.JSONField(default=dict, help_text='Meta and debug information about storage processes',
                                          null=True, verbose_name='meta')),
                ('status', models.CharField(
                    choices=[('initialized', 'Initialized'), ('queued', 'Queued'), ('in_progress', 'In progress'),
                             ('failed', 'Failed'), ('completed', 'Completed')], default='created', max_length=64)),
                ('traceback', models.JSONField(default=dict,
                                               help_text='Meta and debug information about storage processes',
                                               null=True, verbose_name='meta')),
            ],
            options={
                'abstract': False,
            },
            bases=('io_storages.pachydermmixin', models.Model),
        ),
        migrations.CreateModel(
            name='PachydermImportStorage',
            fields=[
                ('pachydermmixin_ptr',
                 models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True,
                                      primary_key=True, serialize=False, to='io_storages.pachydermmixin')),
                ('created_at',
                 models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last sync finished time', null=True,
                                                   verbose_name='last sync')),
                ('last_sync_count',
                 models.PositiveIntegerField(blank=True, help_text='Count of tasks synced last time', null=True,
                                             verbose_name='last sync count')),
                ('title',
                 models.CharField(help_text='Pachyderm storage title', max_length=256, null=True,
                                  verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Pachyderm storage description', null=True,
                                                 verbose_name='description')),
                ('project', models.ForeignKey(help_text='A unique integer value identifying this project.',
                                              on_delete=django.db.models.deletion.CASCADE,
                                              related_name='io_storages_pachydermimportstorages',
                                              to='projects.project')),
                ('last_sync_job', models.CharField(blank=True, help_text='Last sync job ID', max_length=256, null=True,
                                                   verbose_name='last_sync_job')),
                ('meta', models.JSONField(default=dict, help_text='Meta and debug information about storage processes',
                                          null=True, verbose_name='meta')),
                ('status', models.CharField(
                    choices=[('initialized', 'Initialized'), ('queued', 'Queued'), ('in_progress', 'In progress'),
                             ('failed', 'Failed'), ('completed', 'Completed')], default='created', max_length=64)),
                ('traceback', models.JSONField(default=dict,
                                               help_text='Meta and debug information about storage processes',
                                               null=True, verbose_name='meta')),
            ],
            options={
                'abstract': False,
            },
            bases=('io_storages.pachydermmixin', models.Model),
        ),
        migrations.CreateModel(
            name='PachydermImportStorageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(help_text='External link key', verbose_name='key')),
                ('object_exists',
                 models.BooleanField(default=True, help_text='Whether object under external link still exists',
                                     verbose_name='object exists')),
                ('created_at',
                 models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                                              related_name='io_storages_pachydermimportstoragelink', to='tasks.task')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links',
                                              to='io_storages.pachydermimportstorage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PachydermExportStorageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_exists',
                 models.BooleanField(default=True, help_text='Whether object under external link still exists',
                                     verbose_name='object exists')),
                ('created_at',
                 models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('annotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE,
                                                    related_name='io_storages_pachydermexportstoragelink',
                                                    to='tasks.annotation')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links',
                                              to='io_storages.pachydermexportstorage')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
